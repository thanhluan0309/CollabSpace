[{"D:\\PHANMEM\\my-app\\src\\index.js":"1","D:\\PHANMEM\\my-app\\src\\App.js":"2","D:\\PHANMEM\\my-app\\src\\reportWebVitals.js":"3","D:\\PHANMEM\\my-app\\src\\app\\store.js":"4","D:\\PHANMEM\\my-app\\src\\component\\DashBoard.js":"5","D:\\PHANMEM\\my-app\\src\\component\\luan\\luan.js":"6","D:\\PHANMEM\\my-app\\src\\component\\dang\\dang.js":"7","D:\\PHANMEM\\my-app\\src\\component\\tuan\\tuan.js":"8","D:\\PHANMEM\\my-app\\src\\features\\counter\\counterSlice.js":"9","D:\\PHANMEM\\my-app\\src\\features\\counter\\Counter.js":"10","D:\\PHANMEM\\my-app\\src\\features\\counter\\counterAPI.js":"11"},{"size":686,"mtime":1668305020367,"results":"12","hashOfConfig":"13"},{"size":679,"mtime":1668420403121,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1668305020770,"results":"15","hashOfConfig":"13"},{"size":204,"mtime":1668305021820,"results":"16","hashOfConfig":"13"},{"size":914,"mtime":1668873559204,"results":"17","hashOfConfig":"13"},{"size":372,"mtime":1668684649764,"results":"18","hashOfConfig":"13"},{"size":850,"mtime":1668871472889,"results":"19","hashOfConfig":"13"},{"size":4518,"mtime":1668873197756,"results":"20","hashOfConfig":"13"},{"size":2811,"mtime":1668684483686,"results":"21","hashOfConfig":"13"},{"size":1967,"mtime":1668685489013,"results":"22","hashOfConfig":"13"},{"size":196,"mtime":1668305019370,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"27v4fe",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"27"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"27"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"D:\\PHANMEM\\my-app\\src\\index.js",[],[],[],"D:\\PHANMEM\\my-app\\src\\App.js",[],[],"D:\\PHANMEM\\my-app\\src\\reportWebVitals.js",[],[],"D:\\PHANMEM\\my-app\\src\\app\\store.js",[],[],"D:\\PHANMEM\\my-app\\src\\component\\DashBoard.js",[],[],"D:\\PHANMEM\\my-app\\src\\component\\luan\\luan.js",[],[],"D:\\PHANMEM\\my-app\\src\\component\\dang\\dang.js",["60","61"],[],"import React, {useState, useEffect} from 'react';\r\nimport './dang.css';\r\nexport const Dang =()=>{\r\n    const [students, setStudents] = useState([{name : 'Dang' , age: 21},\r\n                                                {name: 'Hoang', age: 22},\r\n                                                {name: 'Nam', age: 22},\r\n                                                {name: 'Tuan', age: 22},\r\n                                                {name: 'Hoang', age: 22}]);\r\n\r\n\r\n    return ( \r\n    <div className=\"student\">\r\n                <table>\r\n        <tr>\r\n          <th>Name</th>\r\n          <th>Age</th>\r\n        </tr>\r\n        {students.map( item => {\r\n          return (\r\n            <tr>\r\n              <td>{item.name}</td>\r\n              <td>{item.age}</td>\r\n            </tr>\r\n          )\r\n        })}\r\n      </table>\r\n    </div>\r\n    )\r\n};","D:\\PHANMEM\\my-app\\src\\component\\tuan\\tuan.js",["62","63","64","65"],[],"D:\\PHANMEM\\my-app\\src\\features\\counter\\counterSlice.js",[],[],"D:\\PHANMEM\\my-app\\src\\features\\counter\\Counter.js",["66"],[],"import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  decrement,\n  increment,\n  incrementByAmount,\n  incrementAsync,\n  incrementIfOdd,\n  selectCount,\n  nhanhai,\n} from \"./counterSlice\";\nimport styles from \"./Counter.module.css\";\n\nexport function Counter() {\n  const count = useSelector(selectCount);\n  const dispatch = useDispatch();\n  const [incrementAmount, setIncrementAmount] = useState(\"2\");\n\n  const incrementValue = Number(incrementAmount) || 0;\n\n  return (\n    <div>\n      {console.log(\"count\", count)}\n      <div className={styles.row}>\n        <button\n          className={styles.button}\n          aria-label=\"Decrement value\"\n          onClick={() => dispatch(decrement())}\n        >\n          -\n        </button>\n        <span className={styles.value}>{count}</span>\n        <button\n          className={styles.button}\n          aria-label=\"Increment value\"\n          onClick={() => dispatch(increment())}\n        >\n          +\n        </button>\n      </div>\n      <div className={styles.row}>\n        <input\n          className={styles.textbox}\n          aria-label=\"Set increment amount\"\n          value={incrementAmount}\n          onChange={(e) => setIncrementAmount(e.target.value)}\n        />\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementByAmount(incrementValue))}\n        >\n          Add Amount\n        </button>\n        {/* <button\n          className={styles.button}\n          onClick={() => dispatch(nhanhai(incrementValue))}\n        >\n          x2\n        </button> */}\n        <button\n          className={styles.asyncButton}\n          onClick={() => dispatch(incrementAsync(incrementValue))}\n        >\n          Add Async\n        </button>\n        <button\n          className={styles.button}\n          onClick={() => dispatch(incrementIfOdd(incrementValue))}\n        >\n          Add If Odd\n        </button>\n      </div>\n    </div>\n  );\n}\n","D:\\PHANMEM\\my-app\\src\\features\\counter\\counterAPI.js",[],[],{"ruleId":"67","severity":1,"message":"68","line":1,"column":26,"nodeType":"69","messageId":"70","endLine":1,"endColumn":35},{"ruleId":"67","severity":1,"message":"71","line":4,"column":22,"nodeType":"69","messageId":"70","endLine":4,"endColumn":33},{"ruleId":"72","severity":1,"message":"73","line":35,"column":11,"nodeType":"74","endLine":35,"endColumn":14},{"ruleId":"72","severity":1,"message":"73","line":38,"column":11,"nodeType":"74","endLine":38,"endColumn":14},{"ruleId":"72","severity":1,"message":"73","line":41,"column":11,"nodeType":"74","endLine":41,"endColumn":14},{"ruleId":"72","severity":1,"message":"73","line":44,"column":11,"nodeType":"74","endLine":44,"endColumn":14},{"ruleId":"67","severity":1,"message":"75","line":10,"column":3,"nodeType":"69","messageId":"70","endLine":10,"endColumn":10},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setStudents' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'nhanhai' is defined but never used."]